-- Title: Debug Queue Sample
-- Author: Matthew Schinkel - borntechi.com, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4q5
--
-- This file is part of jallib (https://github.com/jallib/jallib)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: A Queue to delay sending of debug data. Some libraries are
--              time sensitive (such as USB). Sending large amounts of debug
--              data at the same time can cause too much delay for the
--              device waiting.
--
-- This file has been generated by hand (manually maintained)
--
-- Sources:
--
-- Notes:
--      The lib uses TIMER3 (a 16 bit timer)
--

include 18f67j50                      -- target PICmicro
--
-- This program uses the internal oscillator with PLL active.
pragma target clock 48_000_000      -- oscillator frequency
--
pragma target OSC      INTOSC_NOCLKOUT_PLL       -- internal oscillator
pragma target PLLDIV   P2                        -- 8 MHz -> 4 MHz
pragma target CPUDIV   P1                        -- Fosc divisor
pragma target WDT      CONTROL                   -- watchdog
pragma target XINST    DISABLED                  -- extended instruction set
pragma target DEBUG    DISABLED                  -- debugging
pragma target FCMEN    DISABLED                  -- clock monitoring
pragma target IESO     DISABLED                  -- int/ext osc. switch
--
-- The configuration bit settings above are only a selection, sufficient
-- for this program. Other programs may need more or different settings.
--
WDTCON_SWDTEN = OFF                 -- disable WDT
OSCCON_SCS = 0                      -- select primary oscillator
OSCTUNE_PLLEN = TRUE                -- use PLL
--
enable_digital_io()                 -- make all pins digital I/O
--
include delay                       -- library with delay procedures

const PRINT_MAX_VAR_SIZE = 6
include print

-- setup uart for communication
const serial_hw_baudrate  = 115200   -- set the baudrate
include serial_hardware
serial_hw_init()
-- some aliases so it is easy to change from serial hw to serial sw.
alias serial_write is serial_hw_write
alias serial_read is serial_hw_read
alias serial_data is serial_hw_data
alias serial_data_available is serial_hw_data_available

-- Serial port is slow, using debug queue ensures our debug data doesn't
-- slow USB requests too much.
alias debug_queue_out is serial_data -- output debug data to serial port
const byte DEBUG_QUEUE_SIZE = 254    -- queue holds 254 bytes (the maximum)
const byte DEBUG_QUEUE_AMOUNT = 1    -- Output 1 byte(s) max
const word DEBUG_QUEUE_FREQ = 100    -- look for output data at 100hz (every .01 ms)
const byte DEBUG_QUEUE_INTERRUPT = TRUE -- USE the interrupt routine.
include debug_queue
debug_queue_init()
alias serial_data_debug is debug_queue
--
print_string(debug_queue,"Debug Queue is Ready")
print_crlf(debug_queue)

-- main program
forever loop
   debug_queue = "."
   delay_1ms(200)
end loop
