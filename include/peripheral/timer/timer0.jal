-- Title: Timer library (Timer Alias for timer 0)
-- Author: Matthew Schinkel, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4q5
-- Revision:
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: Provides a standard way to use timers.
--
-- Sources:
--
-- Notes:
--

include timer_frequency

-- User must choose 8 or 16 bits.
if (TIMER0_BITS != 8) & (TIMER0_BITS) != 16 then
   _error "Please select 8 or 16 bits for const TIMER0_TRY_BITS"
end if

-- set timer registers to TIMER0
alias timer0             is TMR0            -- timer interval
alias timer0_cs          is T0CON_T0CS      -- timer clock source bit
alias timer0_ie          is INTCON_TMR0IE   -- interrupt enable
alias timer0_if          is INTCON_TMR0IF   -- interrupt overflow bit
alias timer0_ps          is T0CON_T0PS      -- timer prescaler select bits
alias timer0_set_8_bits  is T0CON_T08BIT    -- set the timer bits
alias timer0_on          is T0CON_TMR0ON    -- set the timer bits
alias timer0_disable_ps  is T0CON_PSA       -- prescaler assign bit

-- set timer to 16 bit if we can.
if defined(TMR0H) then
   if TIMER0_BITS == 16 then
      const byte TIMER0_IS_BITS = 16
      timer0_set_8_bits = 0 ;set timer to 16 bit
   elsif TIMER0_BITS == 8 then
      const byte TIMER0_IS_BITS = 8
      timer0_set_8_bits = 1 ;set timer to 8 bit
   end if
else
   const byte TIMER0_IS_BITS = 8
end if

-------------------------------------------------
-- Initialize timer and start timer
-- with interrupts enabled.
-------------------------------------------------
procedure timer_init() is

   ---- SETUP TIMER 0
   -- Set the prescaler
   if defined(timer0_disable_ps) then -- only defined for timer0
      if TIMER0_PS_RATIO == 0 then
         _error "You may not set prescaler to 0:1 ratio"
      elsif TIMER0_PS_RATIO == 1 then -- 1:1 prescaler ratio (timer0 only)
         timer0_disable_ps = 1
      elsif TIMER0_PS_RATIO >= 2 then -- 2:1 prescaler ratio or higher (timer0 only)
         timer0_disable_ps = 0
         timer0_ps = TIMER0_PS_RATIO - 2
      else
         _error "not setup here yet"
      end if
   else                                -- 1:1 prescaler ratio or higher
      timer0_ps = TIMER0_PS_RATIO - 1
   end if
   --
   -- Interrupts
   if TIMER0_ENABLE_INTERRUPT == 1 then
      intcon_gie  = on       -- enables all unmasked interrupts
      intcon_peie = on       -- enables all unmasked peripheral interrupts
      
      timer0_ie = 1         -- enable the TIMER0 interrupt bit
   end if
   --
   -- enable/start the timer
   timer0_on = 1    -- turn timer on
   timer0_if = off  -- ensure overflow bit is cleared

end procedure

if TIMER0_BITS != TIMER0_IS_BITS then
   _error "timer library was not able to set timer bits. Try changing TIMER0_BITS"
end if
