-- Title: Ticker library (Timer Alias)
-- Author: Matthew Schinkel, copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4q5
-- Revision:
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: Aliases PIC timers to provides a standard useage for
--              timers on all PICs.
--
-- Sources:
--
-- Notes:
--

-- User much choose 8 or 16 bits.
If (TICKER0_BITS != 8) & (TICKER0_BITS) != 16 then
   _error "Please select 8 or 16 bits for const TICKER0_TRY_BITS"
end if

-- Aliases for timers. Any errors here likly means your timer is not supported.
-- Please help with updates!
if TICKER0_USE_TIMER == 0 then
   -- set timer registers to TICKER0
   alias ticker0             is TMR0            -- timer interval
   alias ticker0_cs          is T0CON_T0CS      -- timer clock source bit
   alias ticker0_ie          is INTCON_TMR0IE   -- interrupt enable
   alias ticker0_if          is INTCON_TMR0IF   -- interrupt overflow bit
   alias ticker0_ps          is T0CON_T0PS      -- timer prescaler select bits
   alias ticker0_set_8_bits  is T0CON_T08BIT    -- set the timer bits
   alias ticker0_on          is T0CON_TMR0ON    -- set the timer bits
   alias ticker0_disable_ps  is T0CON_PSA       -- prescaler assign bit

   -- set timer to 16 bit if we can.
   if defined(TMR0H) then
      if TICKER0_BITS == 16 then
         const byte TICKER0_IS_BITS = 16
         ticker0_set_8_bits = 0 ;set timer to 16 bit
      elsif TICKER0_BITS == 8 then
         const byte TICKER0_IS_BITS = 8
         ticker0_set_8_bits = 1 ;set timer to 8 bit
      end if
   else
      const byte TICKER0_IS_BITS = 8
   end if
elsif TICKER0_USE_TIMER == 1 then
   -- set timer registers to timer1
   alias ticker0          is TMR1             -- timer interval
   alias ticker0_cs       is T1CON_TMR1CS     -- timer clock source bit
   alias ticker0_ie       is PIE1_TMR1IE      -- interrupt enable
   alias ticker0_if       is PIR1_TMR1IF      -- interrupt overflow bit
   alias ticker0_ps       is T1CON_T1CKPS     -- timer prescaler select bits
   alias ticker0_on       is t1con_tmr1on     -- timer 1 enable
   const byte TICKER0_IS_BITS = 16            -- only 16 bits supported
elsif TICKER0_USE_TIMER == 3 then
   -- set timer registers to timer3
   alias ticker0          is TMR3             -- timer interval
   alias ticker0_cs       is T3CON_TMR3CS     -- timer clock source bit
   alias ticker0_ie       is PIE2_TMR3IE      -- interrupt enable
   alias ticker0_if       is PIR2_TMR3IF      -- interrupt overflow bit
   alias ticker0_ps       is T3CON_T3CKPS     -- timer prescaler select bits
   alias ticker0_on       is t3con_tmr3on     -- timer 1 enable
   const byte TICKER0_IS_BITS = 16            -- only 16 bits supported
else
   "TICKER/TIMER 0 is not available for this PIC"
end if

-------------------------------------------------
-- Initialize timer and start timer
-- with interrupts enabled.
-------------------------------------------------
procedure timer_init() is

   ---- SETUP TICKER 0
   -- Set the prescaler
   if defined(ticker0_disable_ps) then -- only defined for timer0
      if TICKER0_PS_RATIO == 0 then
         _error "You may not set prescaler to 0:1 ratio"
      elsif TICKER0_PS_RATIO == 1 then -- 1:1 prescaler ratio (timer0 only)
         ticker0_disable_ps = 1
      elsif TICKER0_PS_RATIO >= 2 then -- 2:1 prescaler ratio or higher (timer0 only)
         ticker0_disable_ps = 0
         ticker0_ps = TICKER0_PS_RATIO - 2
      else
         _error "not setup here yet"
      end if
   else                                -- 1:1 prescaler ratio or higher
      ticker0_ps = TICKER0_PS_RATIO - 1
   end if
   --
   -- Interrupts
   if TICKER0_ENABLE_INTERRUPT == 1 then
      intcon_gie  = on       -- enables all unmasked interrupts
      intcon_peie = on       -- enables all unmasked peripheral interrupts
      
      ticker0_ie = 1         -- enable the TICKER0 interrupt bit
   end if
   --
   -- enable/start the timer
   ticker0_on = 1    -- turn timer on
   ticker0_if = off  -- ensure overflow bit is cleared

end procedure

If TICKER0_BITS != TICKER0_IS_BITS then
   _error "Ticker library was not able to set timer bits. Please change TICKER0_BITS"
end if
